# Generated by Django 5.2.3 on 2025-06-13 01:57

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CommercialRate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("procedure_code", models.CharField(max_length=20)),
                ("modifier", models.CharField(blank=True, max_length=5, null=True)),
                ("zip_code", models.CharField(max_length=10)),
                ("provider", models.CharField(max_length=200)),
                ("payer", models.CharField(max_length=200)),
                ("rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("effective_date", models.DateField()),
                ("data_source", models.CharField(max_length=100)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "commercial_rate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MedicareRate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("procedure_code", models.CharField(max_length=20)),
                ("modifier", models.CharField(blank=True, max_length=5, null=True)),
                ("locality_code", models.CharField(max_length=10)),
                ("rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "medicare_rate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ZipCodeEnriched",
            fields=[
                (
                    "zip_code",
                    models.CharField(max_length=5, primary_key=True, serialize=False),
                ),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("county", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=2, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "zip_code_enriched",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CmsConversionFactor",
            fields=[
                ("year", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "conversion_factor",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("effective_date", models.DateField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "CMS Conversion Factor",
                "verbose_name_plural": "CMS Conversion Factors",
                "db_table": "cms_conversion_factor",
            },
        ),
        migrations.CreateModel(
            name="CmsGpci",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("locality_code", models.CharField(max_length=3)),
                ("year", models.IntegerField()),
                ("work_gpci", models.DecimalField(decimal_places=4, max_digits=5)),
                ("pe_gpci", models.DecimalField(decimal_places=4, max_digits=5)),
                ("mp_gpci", models.DecimalField(decimal_places=4, max_digits=5)),
                (
                    "locality_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "verbose_name": "CMS GPCI",
                "verbose_name_plural": "CMS GPCIs",
                "db_table": "cms_gpci",
            },
        ),
        migrations.CreateModel(
            name="CmsRvu",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("procedure_code", models.CharField(max_length=5)),
                ("modifier", models.CharField(blank=True, max_length=5, null=True)),
                ("work_rvu", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "practice_expense_rvu",
                    models.DecimalField(decimal_places=2, max_digits=6),
                ),
                (
                    "malpractice_rvu",
                    models.DecimalField(decimal_places=2, max_digits=6),
                ),
                (
                    "total_rvu",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("year", models.IntegerField()),
            ],
            options={
                "verbose_name": "CMS RVU",
                "verbose_name_plural": "CMS RVUs",
                "db_table": "cms_rvu",
            },
        ),
        migrations.CreateModel(
            name="FeeSchedule",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("state_code", models.CharField(max_length=2)),
                ("schedule_type", models.CharField(max_length=50)),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                (
                    "conversion_factor",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "fee_schedule",
            },
        ),
        migrations.CreateModel(
            name="MedicareLocalityMap",
            fields=[
                (
                    "zip_code",
                    models.CharField(max_length=5, primary_key=True, serialize=False),
                ),
                ("state_code", models.CharField(max_length=2)),
                ("carrier_code", models.CharField(max_length=2)),
                ("locality_code", models.CharField(max_length=3)),
                ("year_qtr", models.CharField(max_length=10)),
            ],
            options={
                "verbose_name": "Medicare Locality Map",
                "verbose_name_plural": "Medicare Locality Maps",
                "db_table": "medicare_locality_map",
            },
        ),
        migrations.CreateModel(
            name="MedicareLocalityMeta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mac_code", models.CharField(max_length=10)),
                ("locality_code", models.CharField(max_length=3)),
                ("state_name", models.CharField(max_length=100)),
                ("fee_schedule_area", models.CharField(max_length=100)),
                ("counties", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Medicare Locality Metadata",
                "verbose_name_plural": "Medicare Locality Metadata",
                "db_table": "medicare_locality_meta",
            },
        ),
        migrations.CreateModel(
            name="ProcedureCode",
            fields=[
                (
                    "procedure_code",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("description", models.TextField()),
                ("code_type", models.CharField(max_length=10)),
                ("category", models.CharField(blank=True, max_length=50, null=True)),
                ("subcategory", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "procedure_code",
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "state_code",
                    models.CharField(
                        help_text="2-character state code (e.g., 'CA')",
                        max_length=2,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("state_name", models.CharField(max_length=50)),
                ("effective_date", models.DateField()),
                ("expiration_date", models.DateField(blank=True, null=True)),
                ("has_regions", models.BooleanField(default=False)),
                (
                    "data_source",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("data_url", models.CharField(blank=True, max_length=255, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "State",
                "verbose_name_plural": "States",
                "db_table": "state",
            },
        ),
        migrations.CreateModel(
            name="FeeScheduleRate",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("fee_schedule_id", models.IntegerField()),
                ("procedure_code", models.CharField(max_length=20)),
                (
                    "modifier",
                    models.CharField(blank=True, default=None, max_length=5, null=True),
                ),
                ("region_id", models.IntegerField(blank=True, null=True)),
                ("rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("rate_unit", models.CharField(default="1", max_length=20)),
                ("is_by_report", models.BooleanField(default=False)),
                ("effective_date", models.DateField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("access_count", models.IntegerField(default=0)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("service_type", models.TextField(blank=True, null=True)),
                ("category_id", models.TextField(blank=True, null=True)),
                ("percent_of_charge", models.TextField(blank=True, null=True)),
                ("place_of_service", models.TextField(blank=True, null=True)),
                ("code_type", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "fee_schedule_rate",
                "unique_together": {
                    ("fee_schedule_id", "procedure_code", "modifier", "region_id")
                },
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                ("region_id", models.AutoField(primary_key=True, serialize=False)),
                ("state_code", models.CharField(max_length=2)),
                ("region_type", models.CharField(max_length=50)),
                ("region_code", models.CharField(max_length=50)),
                (
                    "region_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "verbose_name": "Region",
                "verbose_name_plural": "Regions",
                "db_table": "region",
                "unique_together": {("state_code", "region_type", "region_code")},
            },
        ),
    ]
